global:
  name: "consul"
  enabled: false
  tls:
    enabled: true
    caCert:
      secretName: "consul-ca-cert"
      secretKey: "tls.crt"
    caKey:
      secretName: "consul-ca-key"
      secretKey: "tls.key"
  adminPartitions:
    enabled: true
    name: part1
  datacenter: dc1
  image: "hashicorp/consul-enterprise:1.15.2-ent"
  #imageK8S: "hashicorp/consul-k8s-control-plane:1.0.6"
  #imageConsulDataplane: "hashicorp/consul-dataplane:1.1.0"
  enterpriseLicense:
    secretName: "license"
    secretKey: "key"
  enableConsulNamespaces: true
  acls:
    manageSystemACLs: true
    bootstrapToken:
      secretName: "bootstrap-acl-token"
      secretKey: "token"
  gossipEncryption:
    secretName: "consul-gossip-encryption-key"
    secretKey: "key"

externalServers:
  enabled: true
  hosts: ["<EKS_ADMIN_CLUSTER_CONSUL_LB>"]
  k8sAuthMethodHost: "<EKS_USER_CLUSTER_K8S_LB>"
  tlsServerName: "server.dc1.consul"

# clientless dataplane mode causes an error - consul-api-gateway-server.cert-manager: error grabbing leaf certificate
client:
  enabled: true
  join: ["<EKS_ADMIN_CLUSTER_CONSUL_LB>"]
  exposeGossipPorts: true

dns:
  enabled: true
  enableRedirection: true

connectInject:
  enabled: true

apiGateway:
  enabled: true
  imageEnvoy: envoyproxy/envoy:v1.23-latest
  #image: hashicorp/consul-api-gateway:0.5.3
  image: hashicorppreview/consul-api-gateway:0.5-dev-b2f0fd134ce4a95f9097942cbfb73dc11c260f82
  managedGatewayClass:
    useHostPorts: true
    serviceType: LoadBalancer
    copyAnnotations:
      service:
        annotations: |
          - service.beta.kubernetes.io/aws-load-balancer-name
          - service.beta.kubernetes.io/aws-load-balancer-type
          - service.beta.kubernetes.io/aws-load-balancer-nlb-target-type
          - service.beta.kubernetes.io/aws-load-balancer-scheme
